#Tiny change
name: Build and Push to ECR

on:
  push:
    branches: [ master ]   
  workflow_dispatch:

env:
  AWS_REGION: ${{ secrets.AWS_REGION || 'us-east-1' }}
  APP_REPO: my_app        
  DB_REPO: my_db            

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials (temporary keys)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token:     ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region:            ${{ env.AWS_REGION }}

      - name: Get AWS account id
        id: acct
        run: echo "id=$(aws sts get-caller-identity --query Account --output text)" >> $GITHUB_OUTPUT

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION \
          | docker login --username AWS --password-stdin \
            ${{ steps.acct.outputs.id }}.dkr.ecr.${AWS_REGION}.amazonaws.com

      - name: Build & Push DB image
        run: |
          docker build -t ${{ steps.acct.outputs.id }}.dkr.ecr.${AWS_REGION}.amazonaws.com/${{ env.DB_REPO }}:latest -f Dockerfile_mysql .
          docker push     ${{ steps.acct.outputs.id }}.dkr.ecr.${AWS_REGION}.amazonaws.com/${{ env.DB_REPO }}:latest

      - name: Build & Push App image
        run: |
          docker build -t ${{ steps.acct.outputs.id }}.dkr.ecr.${AWS_REGION}.amazonaws.com/${{ env.APP_REPO }}:latest -f Dockerfile .
          docker push     ${{ steps.acct.outputs.id }}.dkr.ecr.${AWS_REGION}.amazonaws.com/${{ env.APP_REPO }}:latest
